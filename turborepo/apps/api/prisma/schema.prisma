generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model comments {
    id          Int        @id @default(autoincrement())
    text        String
    createdAt   DateTime? @default(now()) @db.Timestamp(6)
    author_id   Int
    post_id     Int
    users       users   @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    posts       posts   @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}// skipped the mapping, as it seems this is not mandatory

model groups {
    id                  Int    @id @default(autoincrement())
    name                String
    users_to_groups     users_to_groups[]      
}

model posts {
    id          Int         @id @default(autoincrement())
    title       String
    content     String
    createdAt   DateTime?   @default(now()) @db.Timestamp(6)
    author_id   Int
    comments    comments[]
    users       users       @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
// skipped the mapping, as it seems this is not mandatory

model profile_info {
    id          Int         @id @default(autoincrement())
    user_id     Int?
    metadata    Json?
    users       users?      @relation(fields: [user_id], references: [id]) // Define the relation here
} // added last line due to prisma complaints

model users {
  id              Int         @id @default(autoincrement())
  email           String      @unique
  name            String
  password        String
  lastname        String
  comments        comments[]
  posts           posts[]
  profile_info    profile_info[]
  users_to_groups users_to_groups[]
}

model users_to_groups {
  group_id       Int
  user_id        Int

  group          groups    @relation(fields: [group_id], references: [id], onDelete: Cascade)
  user           users     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([group_id, user_id])  // Creating a composite primary key
}